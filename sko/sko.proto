// Copyright 2015 Eryx <evorui аt gmаil dοt cοm>, All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";


option optimize_for = LITE_RUNTIME;

package sko;

message ObjectMeta {
	bytes key = 1;
	uint64 version = 2;
	uint64 incr_id = 3;
	uint64 created = 4;
	uint64 updated = 5;
	uint64 attrs = 6;
	uint64 expired = 11;
	uint64 data_attrs = 12;
	uint64 data_check = 13;
}

message ObjectData {
	uint64 attrs = 8;
	uint64 check = 9;
    bytes value = 10;
}

message ObjectItem {
	ObjectMeta meta = 2;
	ObjectData data = 3;
}

message ObjectReader {
    uint64 mode = 1;
	repeated bytes keys = 2;
    int64 limit_num = 8;
    int64 limit_size = 9;
	bytes key_offset = 12;
	bytes key_cutset = 13;
	uint64 log_offset = 14;
}

message ObjectWriter {
    uint64 mode = 1;
	ObjectMeta meta = 2;
	ObjectData data = 3;
	uint64 prev_version = 5;
	uint64 prev_data_check = 6;
	string incr_namespace = 7;
	uint64 proposal_expired = 16; 
}

message ObjectResult {
	uint64 status = 1;
	string message = 2;
	ObjectMeta meta = 8;
	repeated ObjectItem items = 9;
	bool next = 12;
}

service Object {
    rpc Query (ObjectReader) returns (ObjectResult) {}
    rpc Commit (ObjectWriter) returns (ObjectResult) {}
    rpc Prepare (ObjectWriter) returns (ObjectResult) {}
    rpc Accept (ObjectWriter) returns (ObjectResult) {}
}
